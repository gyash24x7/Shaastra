type User {
	id: ID!
	name: String!
	email: String!
	username: String!
	roles: [String!]!
	verified: Boolean!
}

enum Department {
	WEBOPS
	SPONSORSHIP_AND_PR
	SHOWS_AND_EXHIBITIONS
	EVENTS_AND_WORKSHOPS
	OPERATIONS_AND_INFRASTRUCTURE_PLANNING
	EVOLVE
	ENVISAGE
	FINANCE
	CONCEPT_AND_DESIGN
	PUBLICITY
	QMS
}

enum MemberPosition {
	COORD
	HEAD
	CORE
	COCAS
}

type Member {
	id: ID!
	about: String!
	coverPic: String!
	department: Department!
	email: String!
	enabled: Boolean!
	mobile: String!
	name: String!
	position: MemberPosition!
	profilePic: String!
	rollNumber: String!
	upi: String!
	teams: [Team!]!
	tasksCreated: [Task!]!
	tasksAssigned: [Task!]!
}

type Team {
	id: ID!
	createdById: String!
	department: Department!
	name: String!
	members: [Member!]!
	createdBy: Member!
}

enum ActivityType {
	CREATED
	STATUS_CHANGED
	UPDATED
	DELETED
}

enum TaskStatus {
	NOT_ASSIGNED
	ASSIGNED
	IN_PROGRESS
	SUBMITTED
	APPROVED
	COMPLETED
}

type Task {
	id: ID!
	title: String!
	description: String!
	status: TaskStatus!
	createdBy: Member!
	assignee: Member!
	createdAt: String!
	deadline: String!
	byDepartment: Department!
	forDepartment: Department!
	taskActivity: [TaskActivity!]!
}

type TaskActivity {
	id: ID!
	type: ActivityType!
	title: String!
	description: String!
	task: Task!
}

type Query {
	me: Member!
	teams(department:Department!): [Team!]!
	tasks: [Task!]!
	tasksRequested: [Task!]!
	taskActivity(taskId: String!): [TaskActivity!]!
}

type Mutation {
	login(data: LoginInput!): String!
	logout: String!
	verifyUser(data:VerifyUserInput!): User!
	createMember(data: CreateMemberInput!): Member!
	enableMember(data: EnableMemberInput!): Member!
	createTeam(data: CreateTeamInput!): Team!
	addTeamMembers(data: AddTeamMembersInput!): Team!
	createTask(data: CreateTaskInput!): Task!
	updateTask(data: UpdateTaskInput!): Task!
	assignTask(data: AssignTaskInput!): Task!
	startTaskProgress(data: TaskIdInput!): Task!
	submitTask(data: TaskIdInput!): Task!
	approveTask(data: TaskIdInput!): Task!
	completeTask(data: TaskIdInput!): Task!
}

input LoginInput {
	username: String!
	password: String!
}

input VerifyUserInput {
	userId: String!
	hash: String!
}

input CreateMemberInput {
	name: String!
	email: String!
	password: String!
	rollNumber: String!
	department: Department!
	mobile: String!
}

input EnableMemberInput {
	id: String!
}

input CreateTeamInput {
	name: String!
	department: Department!
}

input AddTeamMembersInput {
	teamId: String!
	memberIds: [String!]!
}

input CreateTaskInput {
	title: String!
	description: String!
	deadline: String!
	forDepartment: Department!
}

input UpdateTaskInput {
	taskId: String!
	title: String
	description: String
	deadline: String
}

input AssignTaskInput {
	taskId: String!
	assigneeId: String!
}

input TaskIdInput {
	taskId: String!
}

