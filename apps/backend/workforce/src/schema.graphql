directive @extends on INTERFACE | OBJECT

directive @external on FIELD_DEFINITION | OBJECT

directive @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION

directive @key(fields: String!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT

directive @link(import: [link__Import], url: String!) on SCHEMA

directive @override(from: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @shareable on FIELD_DEFINITION | OBJECT

directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION

input CreateMemberInput {
  department: Department!
  email: String!
  mobile: String!
  name: String!
  password: String!
  rollNumber: String!
}

input CreateTeamInput {
  name: String!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

enum Department {
  CONCEPT_AND_DESIGN
  ENVISAGE
  EVENTS_AND_WORKSHOPS
  EVOLVE
  FINANCE
  OPERATIONS_AND_INFRASTRUCTURE_PLANNING
  PUBLICITY
  QMS
  SHOWS_AND_EXHIBITIONS
  SPONSORSHIP_AND_PR
  WEBOPS
}

input EnableMemberInput {
  id: String!
}

type Member {
  about: String!
  coverPic: String!
  department: Department!
  email: String!
  enabled: Boolean!
  id: ID!
  mobile: String!
  name: String!
  position: MemberPosition!
  profilePic: String!
  rollNumber: String!
  teams: [Team!]!
  upi: String!
}

enum MemberPosition {
  COCAS
  COORD
  CORE
  HEAD
}

type Mutation {
  createMember(data: CreateMemberInput!): Member!
  createTeam(data: CreateTeamInput!): Team!
  enableMember(data: EnableMemberInput!): Member!
}

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
  me: Member
}

type Team {
  createdBy: Member!
  department: Department!
  id: ID!
  members: [Member!]!
  name: String!
}

scalar _Any

union _Entity = Member | Team

type _Service {
  """
  The sdl representing the federated service capabilities. Includes federation directives, removes federation types, and includes rest of full schema after schema directives have been applied
  """
  sdl: String
}

scalar link__Import