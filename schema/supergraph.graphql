type Team {
  id: ID!
  createdById: String!
  department: Department!
  name: String!
  members: [Member!]!
}

enum Department {
  WEBOPS
  SPONSORSHIP_AND_PR
  SHOWS_AND_EXHIBITIONS
  EVENTS_AND_WORKSHOPS
  OPERATIONS_AND_INFRASTRUCTURE_PLANNING
  EVOLVE
  ENVISAGE
  FINANCE
  CONCEPT_AND_DESIGN
  PUBLICITY
  QMS
}

type Member {
  id: ID!
  about: String!
  coverPic: String!
  department: Department!
  email: String!
  enabled: Boolean!
  mobile: String!
  name: String!
  position: MemberPosition!
  profilePic: String!
  rollNumber: String!
  upi: String!
  teams: [Team!]!
}

enum MemberPosition {
  COORD
  HEAD
  CORE
  COCAS
}

type Message {
  id: ID!
  channelId: String!
  content: String!
  createdById: String!
  channel: Channel!
}

type Channel {
  id: ID!
  archived: Boolean!
  createdById: String!
  createdOn: DateTime!
  description: String!
  name: String!
  type: ChannelType!
  messages: [Message!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum ChannelType {
  DIRECT
  GROUP
}

type Query {
  authInfo: String!
  getMessages: [Message!]!
  me: Member!
}

type Mutation {
  login(data: LoginInput!): Boolean!
  verifyUser(data: VerifyUserInput!): String!
  logout: Boolean!
  createChannel(data: CreateChannelInput!): String!
  createMessage(data: CreateMessageInput!): String!
  createMember(data: CreateMemberInput!): Boolean!
  enableMember(data: EnableMemberInput!): Boolean!
  createTeam(data: CreateTeamInput!): String!
}

input LoginInput {
  username: String!
  password: String!
}

input VerifyUserInput {
  userId: String!
  tokenId: String!
}

input CreateChannelInput {
  name: String!
  description: String!
  type: ChannelType!
}

input CreateMessageInput {
  content: String!
  channelId: String!
}

input CreateMemberInput {
  name: String!
  email: String!
  password: String!
  rollNumber: String!
  department: Department!
  position: MemberPosition!
  mobile: String!
}

input EnableMemberInput {
  id: String!
}

input CreateTeamInput {
  name: String!
}